SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    1

************ OBJECT LISTING ************

FILE NAME: Z:\Users\thomas\Projekte\fxSDK\Bob\Draw.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Draw.c     1    /*
          Draw.c     2     * Draw.c
          Draw.c     3     * by xythobuz
          Draw.c     4     * visit: www.xythobuz.org
          Draw.c     5     *
          Draw.c     6     * Defines some functions for drawing the world
          Draw.c     7     */
          Draw.c     8    #include "fxlib.h"
          Draw.c     9    #include "Draw.h"
          Draw.c    10    
          Draw.c    11    #define WalkingStateA 1
          Draw.c    12    #define WalkingStateB 2
          Draw.c    13    #define MINX 0
          Draw.c    14    #define MINY 0
          Draw.c    15    #define MAXX 15
          Draw.c    16    #define MAXY 7
          Draw.c    17    
          Draw.c    18    int lastWalkingState = WalkingStateA;
          Draw.c    19    
          Draw.c    20    void set(char x, char y) {
P   00000000              _set:                            ; function: set
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 6D4E                   EXTS.B      R4,R13
    00000006 4D11                   CMP/PZ      R13
    00000008 8B0F                   BF          L373
          Draw.c    21            if (x >= 0) {
          Draw.c    22                    if (x <= 127) {
    0000000A E27F                   MOV         #127,R2
    0000000C 3D27                   CMP/GT      R2,R13
    0000000E 890C                   BT          L373
    00000010 6E5E                   EXTS.B      R5,R14
    00000012 4E11                   CMP/PZ      R14
    00000014 8B09                   BF          L373
          Draw.c    23                            if (y >= 0) {
          Draw.c    24                                    if (y <= 63) {
    00000016 E33F                   MOV         #63,R3
    00000018 3E37                   CMP/GT      R3,R14
    0000001A 8906                   BT          L373
          Draw.c    25                                            Bdisp_SetPoint_VRAM(x, y, 1);
    0000001C D188                   MOV.L       L416,R1    ; _Bdisp_SetPoint_VRAM
    0000001E E601                   MOV         #1,R6
    00000020 65E3                   MOV         R14,R5
    00000022 64D3                   MOV         R13,R4
    00000024 6DF6                   MOV.L       @R15+,R13
    00000026 412B                   JMP         @R1
    00000028 6EF6                   MOV.L       @R15+,R14
    0000002A              L373:                             
          Draw.c    26                                    }
          Draw.c    27                            }
          Draw.c    28                    }
          Draw.c    29            }
          Draw.c    30    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000002A 6DF6                   MOV.L       @R15+,R13
    0000002C 000B                   RTS
    0000002E 6EF6                   MOV.L       @R15+,R14
          Draw.c    31    
          Draw.c    32    void unset(char x, char y) {
    00000030              _unset:                          ; function: unset
                                                           ; frame size=8
    00000030 2FE6                   MOV.L       R14,@-R15
    00000032 2FD6                   MOV.L       R13,@-R15
    00000034 6D4E                   EXTS.B      R4,R13
    00000036 4D11                   CMP/PZ      R13
    00000038 8B0F                   BF          L377
          Draw.c    33            if (x >= 0) {
          Draw.c    34                    if (x <= 127) {
    0000003A E27F                   MOV         #127,R2
    0000003C 3D27                   CMP/GT      R2,R13
    0000003E 890C                   BT          L377
    00000040 6E5E                   EXTS.B      R5,R14
    00000042 4E11                   CMP/PZ      R14
    00000044 8B09                   BF          L377
          Draw.c    35                            if (y >= 0) {
          Draw.c    36                                    if (y <= 63) {
    00000046 E33F                   MOV         #63,R3
    00000048 3E37                   CMP/GT      R3,R14
    0000004A 8906                   BT          L377
          Draw.c    37                                            Bdisp_SetPoint_VRAM(x, y, 0);
    0000004C D17C                   MOV.L       L416,R1    ; _Bdisp_SetPoint_VRAM
    0000004E E600                   MOV         #0,R6
    00000050 65E3                   MOV         R14,R5
    00000052 64D3                   MOV         R13,R4
    00000054 6DF6                   MOV.L       @R15+,R13
    00000056 412B                   JMP         @R1
    00000058 6EF6                   MOV.L       @R15+,R14
    0000005A              L377:                             
          Draw.c    38                                    }
          Draw.c    39                            }
          Draw.c    40                    }
          Draw.c    41            }
          Draw.c    42    }
    0000005A 6DF6                   MOV.L       @R15+,R13
    0000005C 000B                   RTS
    0000005E 6EF6                   MOV.L       @R15+,R14
          Draw.c    43    
          Draw.c    44    char translate(char x) {
    00000060              _translate:                      ; function: translate
                                                           ; frame size=0
          Draw.c    45            // Translates a Block Coordinate to a Pixle Coordinate!
          Draw.c    46            // Takes 0 <= x <= 16
          Draw.c    47            // Gives 0 <= x <= 127
          Draw.c    48            return (x * 8);
    00000060 6043                   MOV         R4,R0
    00000062 4008                   SHLL2       R0
          Draw.c    49    }
    00000064 000B                   RTS
    00000066 4000                   SHLL        R0
          Draw.c    50    
          Draw.c    51    void DrawBlock(char x, char y) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000068              _DrawBlock:                      ; function: DrawBlock
                                                           ; frame size=40
    00000068 2FE6                   MOV.L       R14,@-R15
    0000006A 6E53                   MOV         R5,R14
    0000006C 2FD6                   MOV.L       R13,@-R15
    0000006E 654E                   EXTS.B      R4,R5
    00000070 2FC6                   MOV.L       R12,@-R15
    00000072 4511                   CMP/PZ      R5
    00000074 2FB6                   MOV.L       R11,@-R15
    00000076 2FA6                   MOV.L       R10,@-R15
    00000078 2F96                   MOV.L       R9,@-R15
    0000007A 2F86                   MOV.L       R8,@-R15
    0000007C 4F22                   STS.L       PR,@-R15
    0000007E 7FF8                   ADD         #-8,R15
    00000080 8B48                   BF          L382
    00000082 62EE                   EXTS.B      R14,R2
    00000084 4211                   CMP/PZ      R2
    00000086 8B45                   BF          L382
          Draw.c    52            if ((x >= MINX) && (y >= MINY)) {
          Draw.c    53                    if ((x <= MAXX) && (y <= MAXY)) {
    00000088 E20F                   MOV         #15,R2
    0000008A 3527                   CMP/GT      R2,R5
    0000008C 8942                   BT          L382
    0000008E 61EE                   EXTS.B      R14,R1
    00000090 E307                   MOV         #7,R3
    00000092 3137                   CMP/GT      R3,R1
    00000094 893E                   BT          L382
          Draw.c    54                            char i;
          Draw.c    55                            char j;
          Draw.c    56                            x = translate(x);
    00000096 BFE3                   BSR         _translate
    00000098 0009                   NOP
    0000009A 6B03                   MOV         R0,R11
          Draw.c    57                            y = translate(y);
    0000009C BFE0                   BSR         _translate
    0000009E 64E3                   MOV         R14,R4
    000000A0 2F00                   MOV.B       R0,@R15
          Draw.c    58            
          Draw.c    59                            // Fill 8x8px with black!
          Draw.c    60                            for (i = 0; i < 8; i++) {
    000000A2 E900                   MOV         #0,R9
    000000A4 80F4                   MOV.B       R0,@(4,R15)
    000000A6 ED08                   MOV         #8,R13
    000000A8 6A93                   MOV         R9,R10
    000000AA              L384:                             
          Draw.c    61                                    for (j = 0; j < 8; j++) {
    000000AA 6C93                   MOV         R9,R12
    000000AC 84F4                   MOV.B       @(4,R15),R0
    000000AE 68B3                   MOV         R11,R8
    000000B0 6E03                   MOV         R0,R14
    000000B2 38AC                   ADD         R10,R8
    000000B4              L385:                             
          Draw.c    62                                            set(x + i, y + j);
    000000B4 65E3                   MOV         R14,R5
    000000B6 BFA3                   BSR         _set
    000000B8 6483                   MOV         R8,R4
    000000BA 7C01                   ADD         #1,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000BC 62CE                   EXTS.B      R12,R2
    000000BE 32D3                   CMP/GE      R13,R2
    000000C0 8FF8                   BF/S        L385
    000000C2 7E01                   ADD         #1,R14
    000000C4 7A01                   ADD         #1,R10
    000000C6 62AE                   EXTS.B      R10,R2
    000000C8 32D3                   CMP/GE      R13,R2
    000000CA 8BEE                   BF          L384
    000000CC 84F4                   MOV.B       @(4,R15),R0
    000000CE 6EB3                   MOV         R11,R14
    000000D0 63F0                   MOV.B       @R15,R3
    000000D2 68B3                   MOV         R11,R8
          Draw.c    63                                    }
          Draw.c    64                            }
          Draw.c    65                            for (i = 0; i < 6; i++) {
    000000D4 6C93                   MOV         R9,R12
    000000D6 6D03                   MOV         R0,R13
    000000D8 69F0                   MOV.B       @R15,R9
    000000DA 7306                   ADD         #6,R3
    000000DC 2F30                   MOV.B       R3,@R15
    000000DE 7801                   ADD         #1,R8
    000000E0 7D01                   ADD         #1,R13
    000000E2 7E01                   ADD         #1,R14
    000000E4 7901                   ADD         #1,R9
    000000E6 EA06                   MOV         #6,R10
    000000E8 60B3                   MOV         R11,R0
    000000EA 7006                   ADD         #6,R0
    000000EC 80F4                   MOV.B       R0,@(4,R15)
    000000EE              L386:                             
          Draw.c    66                                    unset(x + 1 + i, y + 1);
    000000EE 6593                   MOV         R9,R5
    000000F0 BF9E                   BSR         _unset
    000000F2 64E3                   MOV         R14,R4
          Draw.c    67                                    unset(x + 1 + i, y + 6);
    000000F4 65F0                   MOV.B       @R15,R5
    000000F6 BF9B                   BSR         _unset
    000000F8 64E3                   MOV         R14,R4
          Draw.c    68                                    unset(x + 1, y + 1 + i);
    000000FA 65D3                   MOV         R13,R5
    000000FC BF98                   BSR         _unset
    000000FE 6483                   MOV         R8,R4
          Draw.c    69                                    unset(x + 6, y + 1 + i);
    00000100 84F4                   MOV.B       @(4,R15),R0
    00000102 65D3                   MOV         R13,R5
    00000104 BF94                   BSR         _unset
    00000106 6403                   MOV         R0,R4
    00000108 7C01                   ADD         #1,R12
    0000010A 7D01                   ADD         #1,R13
    0000010C 62CE                   EXTS.B      R12,R2
    0000010E 32A3                   CMP/GE      R10,R2
    00000110 8FED                   BF/S        L386
    00000112 7E01                   ADD         #1,R14
    00000114              L382:                             
          Draw.c    70                            }
          Draw.c    71                    }
          Draw.c    72            }
          Draw.c    73    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000114 7F08                   ADD         #8,R15
    00000116 4F26                   LDS.L       @R15+,PR
    00000118 68F6                   MOV.L       @R15+,R8
    0000011A 69F6                   MOV.L       @R15+,R9
    0000011C 6AF6                   MOV.L       @R15+,R10
    0000011E 6BF6                   MOV.L       @R15+,R11
    00000120 6CF6                   MOV.L       @R15+,R12
    00000122 6DF6                   MOV.L       @R15+,R13
    00000124 000B                   RTS
    00000126 6EF6                   MOV.L       @R15+,R14
          Draw.c    74    
          Draw.c    75    void DrawBox(char x, char y) {
    00000128              _DrawBox:                        ; function: DrawBox
                                                           ; frame size=40
    00000128 2FE6                   MOV.L       R14,@-R15
    0000012A 2FD6                   MOV.L       R13,@-R15
    0000012C 2FC6                   MOV.L       R12,@-R15
    0000012E 6C53                   MOV         R5,R12
    00000130 2FB6                   MOV.L       R11,@-R15
    00000132 654E                   EXTS.B      R4,R5
    00000134 2FA6                   MOV.L       R10,@-R15
    00000136 4511                   CMP/PZ      R5
    00000138 2F96                   MOV.L       R9,@-R15
    0000013A 2F86                   MOV.L       R8,@-R15
    0000013C 4F22                   STS.L       PR,@-R15
    0000013E 7FF8                   ADD         #-8,R15
    00000140 8B74                   BF          L387
    00000142 62CE                   EXTS.B      R12,R2
    00000144 4211                   CMP/PZ      R2
    00000146 8B71                   BF          L387
          Draw.c    76            if ((x >= MINX) && (y >= MINY)) {
          Draw.c    77                    if ((x <= MAXX) && (y <= MAXY)) {
    00000148 E20F                   MOV         #15,R2
    0000014A 3527                   CMP/GT      R2,R5
    0000014C 896E                   BT          L387
    0000014E 61CE                   EXTS.B      R12,R1
    00000150 E307                   MOV         #7,R3
    00000152 3137                   CMP/GT      R3,R1
    00000154 896A                   BT          L387
          Draw.c    78                            int i;
          Draw.c    79                            int j;
          Draw.c    80                            x = translate(x);
    00000156 BF83                   BSR         _translate
    00000158 0009                   NOP
    0000015A 6D03                   MOV         R0,R13
          Draw.c    81                            y = translate(y);
    0000015C BF80                   BSR         _translate
    0000015E 64C3                   MOV         R12,R4
    00000160 6E03                   MOV         R0,R14
          Draw.c    82    
          Draw.c    83                            // Fill block, unset question mark:
          Draw.c    84                            for (i = 0; i < 8; i++) {
    00000162 E900                   MOV         #0,R9
    00000164 EC08                   MOV         #8,R12
    00000166 6A93                   MOV         R9,R10
    00000168              L389:                             
          Draw.c    85                                    for (j = 0; j < 8; j++) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000168 6B93                   MOV         R9,R11
    0000016A 68A3                   MOV         R10,R8
    0000016C 38DC                   ADD         R13,R8
    0000016E              L390:                             
          Draw.c    86                                            set(x + i, y + j);
    0000016E 65B3                   MOV         R11,R5
    00000170 35EC                   ADD         R14,R5
    00000172 BF45                   BSR         _set
    00000174 6483                   MOV         R8,R4
    00000176 7B01                   ADD         #1,R11
    00000178 3BC3                   CMP/GE      R12,R11
    0000017A 8BF8                   BF          L390
    0000017C 7A01                   ADD         #1,R10
    0000017E 3AC3                   CMP/GE      R12,R10
    00000180 8BF2                   BF          L389
          Draw.c    87                                    }
          Draw.c    88                            }
          Draw.c    89                            for (i = 0; i < 8; i++) {
    00000182 6B93                   MOV         R9,R11
    00000184 6AE3                   MOV         R14,R10
    00000186 7A07                   ADD         #7,R10
    00000188 62D3                   MOV         R13,R2
    0000018A 7207                   ADD         #7,R2
    0000018C 2F20                   MOV.B       R2,@R15
    0000018E              L391:                             
          Draw.c    90                                    unset(x + i, y);
    0000018E 65E3                   MOV         R14,R5
    00000190 68B3                   MOV         R11,R8
    00000192 38DC                   ADD         R13,R8
    00000194 BF4C                   BSR         _unset
    00000196 6483                   MOV         R8,R4
          Draw.c    91                                    unset(x, y + i);
    00000198 69B3                   MOV         R11,R9
    0000019A 39EC                   ADD         R14,R9
    0000019C 6593                   MOV         R9,R5
    0000019E BF47                   BSR         _unset
    000001A0 64D3                   MOV         R13,R4
          Draw.c    92                                    unset(x + i, y + 7);
    000001A2 65A3                   MOV         R10,R5
    000001A4 BF44                   BSR         _unset
    000001A6 6483                   MOV         R8,R4
          Draw.c    93                                    unset(x + 7, y + i);
    000001A8 6593                   MOV         R9,R5
    000001AA BF41                   BSR         _unset
    000001AC 64F0                   MOV.B       @R15,R4
    000001AE 7B01                   ADD         #1,R11
    000001B0 3BC3                   CMP/GE      R12,R11
    000001B2 8BEC                   BF          L391
          Draw.c    94                            }
          Draw.c    95    
          Draw.c    96                            unset(x + 3, y + 1);
    000001B4 65E3                   MOV         R14,R5
    000001B6 7501                   ADD         #1,R5
    000001B8 2F50                   MOV.B       R5,@R15
    000001BA 6CD3                   MOV         R13,R12
    000001BC 7C03                   ADD         #3,R12
    000001BE BF37                   BSR         _unset




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C0 64C3                   MOV         R12,R4
          Draw.c    97                            unset(x + 4, y + 1);
    000001C2 6BD3                   MOV         R13,R11
    000001C4 65F0                   MOV.B       @R15,R5
    000001C6 7B04                   ADD         #4,R11
    000001C8 BF32                   BSR         _unset
    000001CA 64B3                   MOV         R11,R4
          Draw.c    98                            unset(x + 2, y + 2);
    000001CC 65E3                   MOV         R14,R5
    000001CE 7502                   ADD         #2,R5
    000001D0 2F50                   MOV.B       R5,@R15
    000001D2 64D3                   MOV         R13,R4
    000001D4 BF2C                   BSR         _unset
    000001D6 7402                   ADD         #2,R4
          Draw.c    99                            unset(x + 5, y + 2);
    000001D8 65F0                   MOV.B       @R15,R5
    000001DA 60D3                   MOV         R13,R0
    000001DC 7005                   ADD         #5,R0
    000001DE 80F4                   MOV.B       R0,@(4,R15)
    000001E0 BF26                   BSR         _unset
    000001E2 6403                   MOV         R0,R4
          Draw.c   100                            unset(x + 5, y + 3);
    000001E4 84F4                   MOV.B       @(4,R15),R0
    000001E6 65E3                   MOV         R14,R5
    000001E8 7503                   ADD         #3,R5
    000001EA BF21                   BSR         _unset
    000001EC 6403                   MOV         R0,R4
          Draw.c   101                            unset(x + 3, y + 4);
    000001EE 65E3                   MOV         R14,R5
    000001F0 7504                   ADD         #4,R5
    000001F2 2F50                   MOV.B       R5,@R15
    000001F4 BF1C                   BSR         _unset
    000001F6 64C3                   MOV         R12,R4
          Draw.c   102                            unset(x + 4, y + 4);
    000001F8 65F0                   MOV.B       @R15,R5
    000001FA BF19                   BSR         _unset
    000001FC 64B3                   MOV         R11,R4
          Draw.c   103                            unset(x + 3, y + 6);
    000001FE 65E3                   MOV         R14,R5
    00000200 7506                   ADD         #6,R5
    00000202 2F50                   MOV.B       R5,@R15
    00000204 BF14                   BSR         _unset
    00000206 64C3                   MOV         R12,R4
          Draw.c   104                            unset(x + 4, y + 6);
    00000208 65F0                   MOV.B       @R15,R5
    0000020A BF11                   BSR         _unset
    0000020C 64B3                   MOV         R11,R4
          Draw.c   105                            unset(x + 3, y + 7);
    0000020E 65A3                   MOV         R10,R5
    00000210 BF0E                   BSR         _unset
    00000212 64C3                   MOV         R12,R4
          Draw.c   106                            unset(x + 4, y + 7);
    00000214 65A3                   MOV         R10,R5
    00000216 64B3                   MOV         R11,R4
    00000218 7F08                   ADD         #8,R15
    0000021A 4F26                   LDS.L       @R15+,PR
    0000021C 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000021E 69F6                   MOV.L       @R15+,R9
    00000220 6AF6                   MOV.L       @R15+,R10
    00000222 6BF6                   MOV.L       @R15+,R11
    00000224 6CF6                   MOV.L       @R15+,R12
    00000226 6DF6                   MOV.L       @R15+,R13
    00000228 AF02                   BRA         _unset
    0000022A 6EF6                   MOV.L       @R15+,R14
    0000022C              L387:                             
          Draw.c   107                    }
          Draw.c   108            }
          Draw.c   109    }
    0000022C 7F08                   ADD         #8,R15
    0000022E 4F26                   LDS.L       @R15+,PR
    00000230 68F6                   MOV.L       @R15+,R8
    00000232 69F6                   MOV.L       @R15+,R9
    00000234 6AF6                   MOV.L       @R15+,R10
    00000236 6BF6                   MOV.L       @R15+,R11
    00000238 6CF6                   MOV.L       @R15+,R12
    0000023A 6DF6                   MOV.L       @R15+,R13
    0000023C 000B                   RTS
    0000023E 6EF6                   MOV.L       @R15+,R14
    00000240              L416:                             
    00000240 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
          Draw.c   110    
          Draw.c   111    void DrawCoin(char x, char y) {
    00000244              _DrawCoin:                       ; function: DrawCoin
                                                           ; frame size=44
    00000244 2FE6                   MOV.L       R14,@-R15
    00000246 6E53                   MOV         R5,R14
    00000248 2FD6                   MOV.L       R13,@-R15
    0000024A 654E                   EXTS.B      R4,R5
    0000024C 2FC6                   MOV.L       R12,@-R15
    0000024E 4511                   CMP/PZ      R5
    00000250 2FB6                   MOV.L       R11,@-R15
    00000252 2FA6                   MOV.L       R10,@-R15
    00000254 2F96                   MOV.L       R9,@-R15
    00000256 2F86                   MOV.L       R8,@-R15
    00000258 4F22                   STS.L       PR,@-R15
    0000025A 7FF4                   ADD         #-12,R15
    0000025C 8B54                   BF          L392
    0000025E 62EE                   EXTS.B      R14,R2
    00000260 4211                   CMP/PZ      R2
    00000262 8B51                   BF          L392
          Draw.c   112            char i;
          Draw.c   113            if ((x >= MINX) && (y >= MINY)) {
          Draw.c   114                    if ((x <= MAXX) && (y <= MAXY)) {
    00000264 E20F                   MOV         #15,R2
    00000266 3527                   CMP/GT      R2,R5
    00000268 894E                   BT          L392
    0000026A 61EE                   EXTS.B      R14,R1
    0000026C E307                   MOV         #7,R3
    0000026E 3137                   CMP/GT      R3,R1
    00000270 894A                   BT          L392
          Draw.c   115                            x = translate(x);
    00000272 BEF5                   BSR         _translate
    00000274 0009                   NOP
    00000276 6C03                   MOV         R0,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Draw.c   116                            y = translate(y);
    00000278 BEF2                   BSR         _translate
    0000027A 64E3                   MOV         R14,R4
    0000027C 6B03                   MOV         R0,R11
          Draw.c   117                            for (i = 2; i < 6; i++) {
    0000027E EA02                   MOV         #2,R10
    00000280 6D03                   MOV         R0,R13
    00000282 7D02                   ADD         #2,R13
    00000284 6EC3                   MOV         R12,R14
    00000286 7E02                   ADD         #2,R14
    00000288 6803                   MOV         R0,R8
    0000028A 7801                   ADD         #1,R8
    0000028C 7006                   ADD         #6,R0
    0000028E 63C3                   MOV         R12,R3
    00000290 80F4                   MOV.B       R0,@(4,R15)
    00000292 E906                   MOV         #6,R9
    00000294 7301                   ADD         #1,R3
    00000296 60C3                   MOV         R12,R0
    00000298 2F30                   MOV.B       R3,@R15
    0000029A 7006                   ADD         #6,R0
    0000029C 80F8                   MOV.B       R0,@(8,R15)
    0000029E              L394:                             
          Draw.c   118                                    set(x + i, y + 1);
    0000029E 6583                   MOV         R8,R5
    000002A0 BEAE                   BSR         _set
    000002A2 64E3                   MOV         R14,R4
          Draw.c   119                                    set(x + i, y + 6);
    000002A4 84F4                   MOV.B       @(4,R15),R0
    000002A6 6503                   MOV         R0,R5
    000002A8 BEAA                   BSR         _set
    000002AA 64E3                   MOV         R14,R4
          Draw.c   120                                    set(x + 1, y + i);
    000002AC 65D3                   MOV         R13,R5
    000002AE BEA7                   BSR         _set
    000002B0 64F0                   MOV.B       @R15,R4
          Draw.c   121                                    set(x + 6, y + i);
    000002B2 65D3                   MOV         R13,R5
    000002B4 84F8                   MOV.B       @(8,R15),R0
    000002B6 BEA3                   BSR         _set
    000002B8 6403                   MOV         R0,R4
    000002BA 7A01                   ADD         #1,R10
    000002BC 7D01                   ADD         #1,R13
    000002BE 62AE                   EXTS.B      R10,R2
    000002C0 3293                   CMP/GE      R9,R2
    000002C2 8FEC                   BF/S        L394
    000002C4 7E01                   ADD         #1,R14
          Draw.c   122                            }
          Draw.c   123                            set(x + 3, y + 3);
    000002C6 60B3                   MOV         R11,R0
    000002C8 7003                   ADD         #3,R0
    000002CA 6503                   MOV         R0,R5
    000002CC 80F8                   MOV.B       R0,@(8,R15)
    000002CE 64C3                   MOV         R12,R4
    000002D0 7403                   ADD         #3,R4
    000002D2 BE95                   BSR         _set
    000002D4 2F40                   MOV.B       R4,@R15
          Draw.c   124                            set(x + 3, y + 4);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D6 60B3                   MOV         R11,R0
    000002D8 7004                   ADD         #4,R0
    000002DA 6503                   MOV         R0,R5
    000002DC 80F4                   MOV.B       R0,@(4,R15)
    000002DE BE8F                   BSR         _set
    000002E0 64F0                   MOV.B       @R15,R4
          Draw.c   125                            set(x + 4, y + 3);
    000002E2 64C3                   MOV         R12,R4
    000002E4 84F8                   MOV.B       @(8,R15),R0
    000002E6 7404                   ADD         #4,R4
    000002E8 6503                   MOV         R0,R5
    000002EA BE89                   BSR         _set
    000002EC 2F40                   MOV.B       R4,@R15
          Draw.c   126                            set(x + 4, y + 4);
    000002EE 84F4                   MOV.B       @(4,R15),R0
    000002F0 64F0                   MOV.B       @R15,R4
    000002F2 6503                   MOV         R0,R5
    000002F4 7F0C                   ADD         #12,R15
    000002F6 4F26                   LDS.L       @R15+,PR
    000002F8 68F6                   MOV.L       @R15+,R8
    000002FA 69F6                   MOV.L       @R15+,R9
    000002FC 6AF6                   MOV.L       @R15+,R10
    000002FE 6BF6                   MOV.L       @R15+,R11
    00000300 6CF6                   MOV.L       @R15+,R12
    00000302 6DF6                   MOV.L       @R15+,R13
    00000304 AE7C                   BRA         _set
    00000306 6EF6                   MOV.L       @R15+,R14
    00000308              L392:                             
          Draw.c   127                    }
          Draw.c   128            }
          Draw.c   129    }
    00000308 7F0C                   ADD         #12,R15
    0000030A 4F26                   LDS.L       @R15+,PR
    0000030C 68F6                   MOV.L       @R15+,R8
    0000030E 69F6                   MOV.L       @R15+,R9
    00000310 6AF6                   MOV.L       @R15+,R10
    00000312 6BF6                   MOV.L       @R15+,R11
    00000314 6CF6                   MOV.L       @R15+,R12
    00000316 6DF6                   MOV.L       @R15+,R13
    00000318 000B                   RTS
    0000031A 6EF6                   MOV.L       @R15+,R14
          Draw.c   130    
          Draw.c   131    void clear() {
    0000031C              _clear:                          ; function: clear
                                                           ; frame size=0
          Draw.c   132            Bdisp_AllClr_VRAM();
    0000031C D354                   MOV.L       L417,R3    ; _Bdisp_AllClr_VRAM
    0000031E 432B                   JMP         @R3
    00000320 0009                   NOP
          Draw.c   133    }
          Draw.c   134    
          Draw.c   135    void draw() {
    00000322              _draw:                           ; function: draw
                                                           ; frame size=4
    00000322 4F22                   STS.L       PR,@-R15
          Draw.c   136            Bdisp_AllClr_DD();
    00000324 D353                   MOV.L       L417+4,R3  ; _Bdisp_AllClr_DD




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000326 430B                   JSR         @R3
    00000328 0009                   NOP
          Draw.c   137            Bdisp_PutDisp_DD();
    0000032A D253                   MOV.L       L417+8,R2  ; _Bdisp_PutDisp_DD
    0000032C 422B                   JMP         @R2
    0000032E 4F26                   LDS.L       @R15+,PR
          Draw.c   138    }
          Draw.c   139    
          Draw.c   140    void DrawPlayer(char x, char y, char dir) {
    00000330              _DrawPlayer:                     ; function: DrawPlayer
                                                           ; frame size=64
    00000330 2FE6                   MOV.L       R14,@-R15
    00000332 E01C                   MOV         #28,R0
    00000334 2FD6                   MOV.L       R13,@-R15
    00000336 2FC6                   MOV.L       R12,@-R15
    00000338 2FB6                   MOV.L       R11,@-R15
    0000033A 6B53                   MOV         R5,R11
    0000033C 2FA6                   MOV.L       R10,@-R15
    0000033E 2F96                   MOV.L       R9,@-R15
    00000340 2F86                   MOV.L       R8,@-R15
    00000342 6943                   MOV         R4,R9
    00000344 4F22                   STS.L       PR,@-R15
    00000346 649E                   EXTS.B      R9,R4
    00000348 7FE0                   ADD         #-32,R15
    0000034A 4411                   CMP/PZ      R4
    0000034C 8D02                   BT/S        L418
    0000034E 0F64                   MOV.B       R6,@(R0,R15)
    00000350 A140                   BRA         L395
    00000352 0009                   NOP
    00000354              L418:                             
    00000354 62BE                   EXTS.B      R11,R2
    00000356 4211                   CMP/PZ      R2
    00000358 8901                   BT          L419
    0000035A A13B                   BRA         L395
    0000035C 0009                   NOP
    0000035E              L419:                             
          Draw.c   141            // Whatever direction the player is faceing, it's head is always at the same pos!
          Draw.c   142            char i;
          Draw.c   143            if ((x >= 0) && (y >= 0)) {
          Draw.c   144                    if ((x <= 127) && (y <= 63)) {
    0000035E E27F                   MOV         #127,R2
    00000360 3427                   CMP/GT      R2,R4
    00000362 8B01                   BF          L420
    00000364 A136                   BRA         L395
    00000366 0009                   NOP
    00000368              L420:                             
    00000368 61BE                   EXTS.B      R11,R1
    0000036A E33F                   MOV         #63,R3
    0000036C 3137                   CMP/GT      R3,R1
    0000036E 8B01                   BF          L421
    00000370 A130                   BRA         L395
    00000372 0009                   NOP
    00000374              L421:                             
          Draw.c   145                            // head:
          Draw.c   146                            for (i = 1; i < 4; i++) {
    00000374 EC01                   MOV         #1,R12
    00000376 6893                   MOV         R9,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000378 7801                   ADD         #1,R8
    0000037A 6D83                   MOV         R8,R13
    0000037C 7D01                   ADD         #1,R13
    0000037E 60B3                   MOV         R11,R0
    00000380 7001                   ADD         #1,R0
    00000382 6E03                   MOV         R0,R14
    00000384 80FC                   MOV.B       R0,@(12,R15)
    00000386 EA04                   MOV         #4,R10
    00000388 6093                   MOV         R9,R0
    0000038A 7005                   ADD         #5,R0
    0000038C 80F8                   MOV.B       R0,@(8,R15)
    0000038E 63B3                   MOV         R11,R3
    00000390 7304                   ADD         #4,R3
    00000392 2F30                   MOV.B       R3,@R15
    00000394              L397:                             
          Draw.c   147                                    set(x + 1, y + i);
    00000394 65E3                   MOV         R14,R5
    00000396 BE33                   BSR         _set
    00000398 6483                   MOV         R8,R4
          Draw.c   148                                    set(x + 5, y + i);
    0000039A 65E3                   MOV         R14,R5
    0000039C 84F8                   MOV.B       @(8,R15),R0
    0000039E BE2F                   BSR         _set
    000003A0 6403                   MOV         R0,R4
          Draw.c   149                                    set(x + 1 + i, y);
    000003A2 65B3                   MOV         R11,R5
    000003A4 BE2C                   BSR         _set
    000003A6 64D3                   MOV         R13,R4
          Draw.c   150                                    set(x + 1 + i, y + 4);
    000003A8 65F0                   MOV.B       @R15,R5
    000003AA BE29                   BSR         _set
    000003AC 64D3                   MOV         R13,R4
    000003AE 7C01                   ADD         #1,R12
    000003B0 7D01                   ADD         #1,R13
    000003B2 62CE                   EXTS.B      R12,R2
    000003B4 32A3                   CMP/GE      R10,R2
    000003B6 8FED                   BF/S        L397
    000003B8 7E01                   ADD         #1,R14
    000003BA E01C                   MOV         #28,R0
    000003BC 02FC                   MOV.B       @(R0,R15),R2
    000003BE 63B3                   MOV         R11,R3
    000003C0 1F21                   MOV.L       R2,@(4,R15)
    000003C2 E010                   MOV         #16,R0
    000003C4 7302                   ADD         #2,R3
    000003C6 6193                   MOV         R9,R1
    000003C8 0F34                   MOV.B       R3,@(R0,R15)
    000003CA 6D93                   MOV         R9,R13
    000003CC 7106                   ADD         #6,R1
    000003CE E018                   MOV         #24,R0
    000003D0 0F14                   MOV.B       R1,@(R0,R15)
    000003D2 7D02                   ADD         #2,R13
    000003D4 6393                   MOV         R9,R3
    000003D6 7303                   ADD         #3,R3
    000003D8 2F30                   MOV.B       R3,@R15
    000003DA 62B3                   MOV         R11,R2
    000003DC 7205                   ADD         #5,R2
    000003DE E014                   MOV         #20,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003E0 0F24                   MOV.B       R2,@(R0,R15)
    000003E2 6EB3                   MOV         R11,R14
    000003E4 50F1                   MOV.L       @(4,R15),R0
    000003E6 6AB3                   MOV         R11,R10
    000003E8 7E06                   ADD         #6,R14
    000003EA 7A07                   ADD         #7,R10
    000003EC 6C93                   MOV         R9,R12
    000003EE 8801                   CMP/EQ      #1,R0
    000003F0 8D03                   BT/S        L399
    000003F2 7C04                   ADD         #4,R12
    000003F4 50F1                   MOV.L       @(4,R15),R0
    000003F6 8803                   CMP/EQ      #3,R0
    000003F8 8B4C                   BF          L398
    000003FA              L399:                             
          Draw.c   151                            }
          Draw.c   152                    
          Draw.c   153                            // nose + hair + legs + face:
          Draw.c   154                            if ((dir == 1) || (dir == 3)) {
          Draw.c   155                                    // Player facing right
          Draw.c   156                                    set(x + 6, y + 2);
    000003FA E010                   MOV         #16,R0
    000003FC 05FC                   MOV.B       @(R0,R15),R5
    000003FE E018                   MOV         #24,R0
    00000400 BDFE                   BSR         _set
    00000402 04FC                   MOV.B       @(R0,R15),R4
          Draw.c   157                                    set(x + 2, y + 1);
    00000404 84FC                   MOV.B       @(12,R15),R0
    00000406 6503                   MOV         R0,R5
    00000408 BDFA                   BSR         _set
    0000040A 64D3                   MOV         R13,R4
          Draw.c   158                                    set(x + 2, y + 2);
    0000040C E010                   MOV         #16,R0
    0000040E 05FC                   MOV.B       @(R0,R15),R5
    00000410 BDF6                   BSR         _set
    00000412 64D3                   MOV         R13,R4
          Draw.c   159                                    set(x + 3, y + 1);
    00000414 84FC                   MOV.B       @(12,R15),R0
    00000416 6503                   MOV         R0,R5
    00000418 BDF2                   BSR         _set
    0000041A 64F0                   MOV.B       @R15,R4
          Draw.c   160                                    set(x + 3, y + 5);
    0000041C E014                   MOV         #20,R0
    0000041E 05FC                   MOV.B       @(R0,R15),R5
    00000420 BDEE                   BSR         _set
    00000422 64F0                   MOV.B       @R15,R4
          Draw.c   161                                    set(x + 3, y + 6);
    00000424 65E3                   MOV         R14,R5
    00000426 BDEB                   BSR         _set
    00000428 64F0                   MOV.B       @R15,R4
          Draw.c   162                                    set(x + 2, y + 6);
    0000042A 65E3                   MOV         R14,R5
    0000042C BDE8                   BSR         _set
    0000042E 64D3                   MOV         R13,R4
          Draw.c   163                                    if (dir == 1) {
    00000430 50F1                   MOV.L       @(4,R15),R0
    00000432 8801                   CMP/EQ      #1,R0
    00000434 8B24                   BF          L400




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Draw.c   164                                            set(x + 4, y + 7);
    00000436 65A3                   MOV         R10,R5
    00000438 BDE2                   BSR         _set
    0000043A 64C3                   MOV         R12,R4
          Draw.c   165                                            set(x + 5, y + 7);
    0000043C 84F8                   MOV.B       @(8,R15),R0
    0000043E 65A3                   MOV         R10,R5
    00000440 BDDE                   BSR         _set
    00000442 6403                   MOV         R0,R4
          Draw.c   166                                            // Walking right
          Draw.c   167                                            if (lastWalkingState == WalkingStateA) {
    00000444 D20D                   MOV.L       L417+12,R2 ; _lastWalkingState
    00000446 6022                   MOV.L       @R2,R0
    00000448 8801                   CMP/EQ      #1,R0
    0000044A 8B07                   BF          L401
          Draw.c   168                                                    set(x + 1, y + 6);
    0000044C 65E3                   MOV         R14,R5
    0000044E BDD7                   BSR         _set
    00000450 6483                   MOV         R8,R4
          Draw.c   169                                                    set(x + 4, y + 6);
    00000452 65E3                   MOV         R14,R5
    00000454 BDD4                   BSR         _set
    00000456 64C3                   MOV         R12,R4
          Draw.c   170                                                    lastWalkingState = WalkingStateB;
    00000458 A007                   BRA         L414
    0000045A E202                   MOV         #2,R2
    0000045C              L401:                             
          Draw.c   171                                            } else {
          Draw.c   172                                                    set(x + 2, y + 7);
    0000045C 65A3                   MOV         R10,R5
    0000045E BDCF                   BSR         _set
    00000460 64D3                   MOV         R13,R4
          Draw.c   173                                                    set(x + 3, y + 7);
    00000462 65A3                   MOV         R10,R5
    00000464 BDCC                   BSR         _set
    00000466 64F0                   MOV.B       @R15,R4
          Draw.c   174                                                    lastWalkingState = WalkingStateA;
    00000468 E201                   MOV         #1,R2
    0000046A              L414:                             
    0000046A D304                   MOV.L       L417+12,R3 ; _lastWalkingState
    0000046C A012                   BRA         L398
    0000046E 2322                   MOV.L       R2,@R3
    00000470              L417:                             
    00000470 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000474 <00000000>             .DATA.L     _Bdisp_AllClr_DD
    00000478 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    0000047C <00000000>             .DATA.L     _lastWalkingState
    00000480              L400:                             
          Draw.c   175                                            }
          Draw.c   176                                    } else {
          Draw.c   177                                            set(x + 1, y + 6);
    00000480 65E3                   MOV         R14,R5
    00000482 BDBD                   BSR         _set
    00000484 6483                   MOV         R8,R4
          Draw.c   178                                            set(x + 4, y + 6);
    00000486 65E3                   MOV         R14,R5
    00000488 BDBA                   BSR         _set




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000048A 64C3                   MOV         R12,R4
          Draw.c   179                                            set(x + 5, y + 6);
    0000048C 84F8                   MOV.B       @(8,R15),R0
    0000048E 65E3                   MOV         R14,R5
    00000490 BDB6                   BSR         _set
    00000492 6403                   MOV         R0,R4
    00000494              L398:                             
          Draw.c   180                                    }
          Draw.c   181                            }
          Draw.c   182                            if ((dir == 2) || (dir == 4)) {
    00000494 50F1                   MOV.L       @(4,R15),R0
    00000496 8802                   CMP/EQ      #2,R0
    00000498 8902                   BT          L405
    0000049A 50F1                   MOV.L       @(4,R15),R0
    0000049C 8804                   CMP/EQ      #4,R0
    0000049E 8B45                   BF          L404
    000004A0              L405:                             
          Draw.c   183                                    // Player facing left
          Draw.c   184                                    set(x, y + 2);
    000004A0 E010                   MOV         #16,R0
    000004A2 05FC                   MOV.B       @(R0,R15),R5
    000004A4 BDAC                   BSR         _set
    000004A6 6493                   MOV         R9,R4
          Draw.c   185                                    set(x + 3, y + 1);
    000004A8 84FC                   MOV.B       @(12,R15),R0
    000004AA 6503                   MOV         R0,R5
    000004AC BDA8                   BSR         _set
    000004AE 64F0                   MOV.B       @R15,R4
          Draw.c   186                                    set(x + 4, y + 1);
    000004B0 84FC                   MOV.B       @(12,R15),R0
    000004B2 6503                   MOV         R0,R5
    000004B4 BDA4                   BSR         _set
    000004B6 64C3                   MOV         R12,R4
          Draw.c   187                                    set(x + 4, y + 2);
    000004B8 E010                   MOV         #16,R0
    000004BA 05FC                   MOV.B       @(R0,R15),R5
    000004BC BDA0                   BSR         _set
    000004BE 64C3                   MOV         R12,R4
          Draw.c   188                                    set(x + 3, y + 5);
    000004C0 E014                   MOV         #20,R0
    000004C2 05FC                   MOV.B       @(R0,R15),R5
    000004C4 BD9C                   BSR         _set
    000004C6 64F0                   MOV.B       @R15,R4
          Draw.c   189                                    set(x + 3, y + 6);
    000004C8 65E3                   MOV         R14,R5
    000004CA BD99                   BSR         _set
    000004CC 64F0                   MOV.B       @R15,R4
          Draw.c   190                                    set(x + 4, y + 6);
    000004CE 65E3                   MOV         R14,R5
    000004D0 BD96                   BSR         _set
    000004D2 64C3                   MOV         R12,R4
          Draw.c   191                                    if (dir == 2) {
    000004D4 50F1                   MOV.L       @(4,R15),R0
    000004D6 8802                   CMP/EQ      #2,R0
    000004D8 8B1E                   BF          L406
          Draw.c   192                                            // Player walking left
          Draw.c   193                                            set(x + 1, y + 7);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004DA 65A3                   MOV         R10,R5
    000004DC BD90                   BSR         _set
    000004DE 6483                   MOV         R8,R4
          Draw.c   194                                            set(x + 2, y + 7);
    000004E0 65A3                   MOV         R10,R5
    000004E2 BD8D                   BSR         _set
    000004E4 64D3                   MOV         R13,R4
          Draw.c   195                                            if (lastWalkingState == WalkingStateA) {
    000004E6 D240                   MOV.L       L422,R2    ; _lastWalkingState
    000004E8 6022                   MOV.L       @R2,R0
    000004EA 8801                   CMP/EQ      #1,R0
    000004EC 8B0A                   BF          L407
          Draw.c   196                                                    set(x + 2, y + 6);
    000004EE 65E3                   MOV         R14,R5
    000004F0 BD86                   BSR         _set
    000004F2 64D3                   MOV         R13,R4
          Draw.c   197                                                    set(x + 5, y + 6);
    000004F4 84F8                   MOV.B       @(8,R15),R0
    000004F6 65E3                   MOV         R14,R5
    000004F8 BD82                   BSR         _set
    000004FA 6403                   MOV         R0,R4
          Draw.c   198                                                    lastWalkingState = WalkingStateB;
    000004FC D33A                   MOV.L       L422,R3    ; _lastWalkingState
    000004FE E202                   MOV         #2,R2
    00000500 A014                   BRA         L404
    00000502 2322                   MOV.L       R2,@R3
    00000504              L407:                             
          Draw.c   199                                            } else {
          Draw.c   200                                                    set(x + 3, y + 7);
    00000504 65A3                   MOV         R10,R5
    00000506 BD7B                   BSR         _set
    00000508 64F0                   MOV.B       @R15,R4
          Draw.c   201                                                    set(x + 4, y + 7);
    0000050A 65A3                   MOV         R10,R5
    0000050C BD78                   BSR         _set
    0000050E 64C3                   MOV         R12,R4
          Draw.c   202                                                    lastWalkingState = WalkingStateA;
    00000510 D235                   MOV.L       L422,R2    ; _lastWalkingState
    00000512 E301                   MOV         #1,R3
    00000514 A00A                   BRA         L404
    00000516 2232                   MOV.L       R3,@R2
    00000518              L406:                             
          Draw.c   203                                            }
          Draw.c   204                                    } else {
          Draw.c   205                                            // Player jumping left
          Draw.c   206                                            set(x + 1, y + 6);
    00000518 65E3                   MOV         R14,R5
    0000051A BD71                   BSR         _set
    0000051C 6483                   MOV         R8,R4
          Draw.c   207                                            set(x + 2, y + 6);
    0000051E 65E3                   MOV         R14,R5
    00000520 BD6E                   BSR         _set
    00000522 64D3                   MOV         R13,R4
          Draw.c   208                                            set(x + 5, y + 6);
    00000524 84F8                   MOV.B       @(8,R15),R0
    00000526 65E3                   MOV         R14,R5
    00000528 BD6A                   BSR         _set




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000052A 6403                   MOV         R0,R4
    0000052C              L404:                             
          Draw.c   209                                    }
          Draw.c   210                            }
          Draw.c   211                            if ((dir == 0) || (dir == 5)) {
    0000052C 52F1                   MOV.L       @(4,R15),R2
    0000052E 2228                   TST         R2,R2
    00000530 8902                   BT          L411
    00000532 50F1                   MOV.L       @(4,R15),R0
    00000534 8805                   CMP/EQ      #5,R0
    00000536 8B4D                   BF          L395
    00000538              L411:                             
          Draw.c   212                                    // Player standing or jumping on its place
          Draw.c   213                                    set(x + 2, y + 1);
    00000538 84FC                   MOV.B       @(12,R15),R0
    0000053A 6503                   MOV         R0,R5
    0000053C BD60                   BSR         _set
    0000053E 64D3                   MOV         R13,R4
          Draw.c   214                                    set(x + 4, y + 1);
    00000540 84FC                   MOV.B       @(12,R15),R0
    00000542 6503                   MOV         R0,R5
    00000544 BD5C                   BSR         _set
    00000546 64C3                   MOV         R12,R4
          Draw.c   215                                    set(x + 3, y + 2);
    00000548 E010                   MOV         #16,R0
    0000054A 05FC                   MOV.B       @(R0,R15),R5
    0000054C BD58                   BSR         _set
    0000054E 64F0                   MOV.B       @R15,R4
          Draw.c   216                                    if (dir == 0) {
    00000550 52F1                   MOV.L       @(4,R15),R2
    00000552 2228                   TST         R2,R2
    00000554 8B21                   BF          L412
          Draw.c   217                                            // Standing
          Draw.c   218                                            set(x + 2, y + 5);
    00000556 E014                   MOV         #20,R0
    00000558 05FC                   MOV.B       @(R0,R15),R5
    0000055A BD51                   BSR         _set
    0000055C 64D3                   MOV         R13,R4
          Draw.c   219                                            set(x + 2, y + 6);
    0000055E 65E3                   MOV         R14,R5
    00000560 BD4E                   BSR         _set
    00000562 64D3                   MOV         R13,R4
          Draw.c   220                                            set(x + 2, y + 7);
    00000564 65A3                   MOV         R10,R5
    00000566 BD4B                   BSR         _set
    00000568 64D3                   MOV         R13,R4
          Draw.c   221                                            set(x + 4, y + 5);
    0000056A E014                   MOV         #20,R0
    0000056C 05FC                   MOV.B       @(R0,R15),R5
    0000056E BD47                   BSR         _set
    00000570 64C3                   MOV         R12,R4
          Draw.c   222                                            set(x + 4, y + 6);
    00000572 65E3                   MOV         R14,R5
    00000574 BD44                   BSR         _set
    00000576 64C3                   MOV         R12,R4
          Draw.c   223                                            set(x + 4, y + 7);
    00000578 65A3                   MOV         R10,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000057A BD41                   BSR         _set
    0000057C 64C3                   MOV         R12,R4
          Draw.c   224                                            set(x + 1, y + 7);
    0000057E 65A3                   MOV         R10,R5
    00000580 BD3E                   BSR         _set
    00000582 6483                   MOV         R8,R4
          Draw.c   225                                            set(x, y + 7);
    00000584 65A3                   MOV         R10,R5
    00000586 BD3B                   BSR         _set
    00000588 6493                   MOV         R9,R4
          Draw.c   226                                            set(x + 5, y + 7);
    0000058A 65A3                   MOV         R10,R5
    0000058C 84F8                   MOV.B       @(8,R15),R0
    0000058E BD37                   BSR         _set
    00000590 6403                   MOV         R0,R4
          Draw.c   227                                            set(x + 6, y + 7);
    00000592 65A3                   MOV         R10,R5
    00000594 E018                   MOV         #24,R0
    00000596 A013                   BRA         L415
    00000598 04FC                   MOV.B       @(R0,R15),R4
    0000059A              L412:                             
          Draw.c   228                                    } else {
          Draw.c   229                                            // Jumping
          Draw.c   230                                            set(x + 3, y + 5);
    0000059A E014                   MOV         #20,R0
    0000059C 05FC                   MOV.B       @(R0,R15),R5
    0000059E BD2F                   BSR         _set
    000005A0 64F0                   MOV.B       @R15,R4
          Draw.c   231                                            set(x + 3, y + 6);
    000005A2 65E3                   MOV         R14,R5
    000005A4 BD2C                   BSR         _set
    000005A6 64F0                   MOV.B       @R15,R4
          Draw.c   232                                            set(x + 1, y + 6);
    000005A8 65E3                   MOV         R14,R5
    000005AA BD29                   BSR         _set
    000005AC 6483                   MOV         R8,R4
          Draw.c   233                                            set(x + 2, y + 6);
    000005AE 65E3                   MOV         R14,R5
    000005B0 BD26                   BSR         _set
    000005B2 64D3                   MOV         R13,R4
          Draw.c   234                                            set(x + 4, y + 6);
    000005B4 65E3                   MOV         R14,R5
    000005B6 BD23                   BSR         _set
    000005B8 64C3                   MOV         R12,R4
          Draw.c   235                                            set(x + 5, y + 6);
    000005BA 65E3                   MOV         R14,R5
    000005BC 84F8                   MOV.B       @(8,R15),R0
    000005BE 6403                   MOV         R0,R4
    000005C0              L415:                             
    000005C0 7F20                   ADD         #32,R15
    000005C2 4F26                   LDS.L       @R15+,PR
    000005C4 68F6                   MOV.L       @R15+,R8
    000005C6 69F6                   MOV.L       @R15+,R9
    000005C8 6AF6                   MOV.L       @R15+,R10
    000005CA 6BF6                   MOV.L       @R15+,R11
    000005CC 6CF6                   MOV.L       @R15+,R12
    000005CE 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005D0 AD16                   BRA         _set
    000005D2 6EF6                   MOV.L       @R15+,R14
    000005D4              L395:                             
          Draw.c   236                                    }
          Draw.c   237                            }
          Draw.c   238                    }
          Draw.c   239            }
          Draw.c   240    }
    000005D4 7F20                   ADD         #32,R15
    000005D6 4F26                   LDS.L       @R15+,PR
    000005D8 68F6                   MOV.L       @R15+,R8
    000005DA 69F6                   MOV.L       @R15+,R9
    000005DC 6AF6                   MOV.L       @R15+,R10
    000005DE 6BF6                   MOV.L       @R15+,R11
    000005E0 6CF6                   MOV.L       @R15+,R12
    000005E2 6DF6                   MOV.L       @R15+,R13
    000005E4 000B                   RTS
    000005E6 6EF6                   MOV.L       @R15+,R14
    000005E8              L422:                             
    000005E8 <00000000>             .DATA.L     _lastWalkingState
D   00000000              _lastWalkingState:               ; static: lastWalkingState
    00000000 00000001               .DATA.L     H'00000001







































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Feb-2011 21:51:57  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      240



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000005EC Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000004 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000005F0 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            4
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          10
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            47






























*** COMMAND PARAMETER ***


  -subcommand=C:\users\thomas\Temp\hmkfb30.tmp 

